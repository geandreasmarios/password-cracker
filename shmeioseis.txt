Python 3.12.0 (tags/v3.12.0:0fb18b0, Oct  2 2023, 13:03:39) [MSC v.1935 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
import hashlib
hashlib.md5(b'hello')
<md5 _hashlib.HASH object @ 0x00000243914E6070>
hashlib.md5(b'hello').hexdigest()
'5d41402abc4b2a76b9719d911017c592'
md5_to_crack = hashlib.md5(b'hello').hexdigest()

md5_to_crack
'5d41402abc4b2a76b9719d911017c592'
import itertools
import string
for i, pas in enumerate(itertools.product(string.printable, repeat=5)):
    print(pas)
    if i == 5:
        break

    
('0', '0', '0', '0', '0')
('0', '0', '0', '0', '1')
('0', '0', '0', '0', '2')
('0', '0', '0', '0', '3')
('0', '0', '0', '0', '4')
('0', '0', '0', '0', '5')

string.printable
'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!"#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~ \t\n\r\x0b\x0c'
CHARS = string.printable
for i, pas in enumerate(itertools.product(string.printable, repeat=5)):
    print(pas)
    if i == 250:
        break

    
('0', '0', '0', '0', '0')
('0', '0', '0', '0', '1')
('0', '0', '0', '0', '2')
('0', '0', '0', '0', '3')
('0', '0', '0', '0', '4')
('0', '0', '0', '0', '5')
('0', '0', '0', '0', '6')
('0', '0', '0', '0', '7')
('0', '0', '0', '0', '8')
('0', '0', '0', '0', '9')
('0', '0', '0', '0', 'a')
('0', '0', '0', '0', 'b')
('0', '0', '0', '0', 'c')
('0', '0', '0', '0', 'd')
('0', '0', '0', '0', 'e')
('0', '0', '0', '0', 'f')
('0', '0', '0', '0', 'g')
('0', '0', '0', '0', 'h')
('0', '0', '0', '0', 'i')
('0', '0', '0', '0', 'j')
('0', '0', '0', '0', 'k')
('0', '0', '0', '0', 'l')
('0', '0', '0', '0', 'm')
('0', '0', '0', '0', 'n')
('0', '0', '0', '0', 'o')
('0', '0', '0', '0', 'p')
('0', '0', '0', '0', 'q')
('0', '0', '0', '0', 'r')
('0', '0', '0', '0', 's')
('0', '0', '0', '0', 't')
('0', '0', '0', '0', 'u')
('0', '0', '0', '0', 'v')
('0', '0', '0', '0', 'w')
('0', '0', '0', '0', 'x')
('0', '0', '0', '0', 'y')
('0', '0', '0', '0', 'z')
('0', '0', '0', '0', 'A')
('0', '0', '0', '0', 'B')
('0', '0', '0', '0', 'C')
('0', '0', '0', '0', 'D')
('0', '0', '0', '0', 'E')
('0', '0', '0', '0', 'F')
('0', '0', '0', '0', 'G')
('0', '0', '0', '0', 'H')
('0', '0', '0', '0', 'I')
('0', '0', '0', '0', 'J')
('0', '0', '0', '0', 'K')
('0', '0', '0', '0', 'L')
('0', '0', '0', '0', 'M')
('0', '0', '0', '0', 'N')
('0', '0', '0', '0', 'O')
('0', '0', '0', '0', 'P')
('0', '0', '0', '0', 'Q')
('0', '0', '0', '0', 'R')
('0', '0', '0', '0', 'S')
('0', '0', '0', '0', 'T')
('0', '0', '0', '0', 'U')
('0', '0', '0', '0', 'V')
('0', '0', '0', '0', 'W')
('0', '0', '0', '0', 'X')
('0', '0', '0', '0', 'Y')
('0', '0', '0', '0', 'Z')
('0', '0', '0', '0', '!')
('0', '0', '0', '0', '"')
('0', '0', '0', '0', '#')
('0', '0', '0', '0', '$')
('0', '0', '0', '0', '%')
('0', '0', '0', '0', '&')
('0', '0', '0', '0', "'")
('0', '0', '0', '0', '(')
('0', '0', '0', '0', ')')
('0', '0', '0', '0', '*')
('0', '0', '0', '0', '+')
('0', '0', '0', '0', ',')
('0', '0', '0', '0', '-')
('0', '0', '0', '0', '.')
('0', '0', '0', '0', '/')
('0', '0', '0', '0', ':')
('0', '0', '0', '0', ';')
('0', '0', '0', '0', '<')
('0', '0', '0', '0', '=')
('0', '0', '0', '0', '>')
('0', '0', '0', '0', '?')
('0', '0', '0', '0', '@')
('0', '0', '0', '0', '[')
('0', '0', '0', '0', '\\')
('0', '0', '0', '0', ']')
('0', '0', '0', '0', '^')
('0', '0', '0', '0', '_')
('0', '0', '0', '0', '`')
('0', '0', '0', '0', '{')
('0', '0', '0', '0', '|')
('0', '0', '0', '0', '}')
('0', '0', '0', '0', '~')
('0', '0', '0', '0', ' ')
('0', '0', '0', '0', '\t')
('0', '0', '0', '0', '\n')
('0', '0', '0', '0', '\r')
('0', '0', '0', '0', '\x0b')
('0', '0', '0', '0', '\x0c')
('0', '0', '0', '1', '0')
('0', '0', '0', '1', '1')
('0', '0', '0', '1', '2')
('0', '0', '0', '1', '3')
('0', '0', '0', '1', '4')
('0', '0', '0', '1', '5')
('0', '0', '0', '1', '6')
('0', '0', '0', '1', '7')
('0', '0', '0', '1', '8')
('0', '0', '0', '1', '9')
('0', '0', '0', '1', 'a')
('0', '0', '0', '1', 'b')
('0', '0', '0', '1', 'c')
('0', '0', '0', '1', 'd')
('0', '0', '0', '1', 'e')
('0', '0', '0', '1', 'f')
('0', '0', '0', '1', 'g')
('0', '0', '0', '1', 'h')
('0', '0', '0', '1', 'i')
('0', '0', '0', '1', 'j')
('0', '0', '0', '1', 'k')
('0', '0', '0', '1', 'l')
('0', '0', '0', '1', 'm')
('0', '0', '0', '1', 'n')
('0', '0', '0', '1', 'o')
('0', '0', '0', '1', 'p')
('0', '0', '0', '1', 'q')
('0', '0', '0', '1', 'r')
('0', '0', '0', '1', 's')
('0', '0', '0', '1', 't')
('0', '0', '0', '1', 'u')
('0', '0', '0', '1', 'v')
('0', '0', '0', '1', 'w')
('0', '0', '0', '1', 'x')
('0', '0', '0', '1', 'y')
('0', '0', '0', '1', 'z')
('0', '0', '0', '1', 'A')
('0', '0', '0', '1', 'B')
('0', '0', '0', '1', 'C')
('0', '0', '0', '1', 'D')
('0', '0', '0', '1', 'E')
('0', '0', '0', '1', 'F')
('0', '0', '0', '1', 'G')
('0', '0', '0', '1', 'H')
('0', '0', '0', '1', 'I')
('0', '0', '0', '1', 'J')
('0', '0', '0', '1', 'K')
('0', '0', '0', '1', 'L')
('0', '0', '0', '1', 'M')
('0', '0', '0', '1', 'N')
('0', '0', '0', '1', 'O')
('0', '0', '0', '1', 'P')
('0', '0', '0', '1', 'Q')
('0', '0', '0', '1', 'R')
('0', '0', '0', '1', 'S')
('0', '0', '0', '1', 'T')
('0', '0', '0', '1', 'U')
('0', '0', '0', '1', 'V')
('0', '0', '0', '1', 'W')
('0', '0', '0', '1', 'X')
('0', '0', '0', '1', 'Y')
('0', '0', '0', '1', 'Z')
('0', '0', '0', '1', '!')
('0', '0', '0', '1', '"')
('0', '0', '0', '1', '#')
('0', '0', '0', '1', '$')
('0', '0', '0', '1', '%')
('0', '0', '0', '1', '&')
('0', '0', '0', '1', "'")
('0', '0', '0', '1', '(')
('0', '0', '0', '1', ')')
('0', '0', '0', '1', '*')
('0', '0', '0', '1', '+')
('0', '0', '0', '1', ',')
('0', '0', '0', '1', '-')
('0', '0', '0', '1', '.')
('0', '0', '0', '1', '/')
('0', '0', '0', '1', ':')
('0', '0', '0', '1', ';')
('0', '0', '0', '1', '<')
('0', '0', '0', '1', '=')
('0', '0', '0', '1', '>')
('0', '0', '0', '1', '?')
('0', '0', '0', '1', '@')
('0', '0', '0', '1', '[')
('0', '0', '0', '1', '\\')
('0', '0', '0', '1', ']')
('0', '0', '0', '1', '^')
('0', '0', '0', '1', '_')
('0', '0', '0', '1', '`')
('0', '0', '0', '1', '{')
('0', '0', '0', '1', '|')
('0', '0', '0', '1', '}')
('0', '0', '0', '1', '~')
('0', '0', '0', '1', ' ')
('0', '0', '0', '1', '\t')
('0', '0', '0', '1', '\n')
('0', '0', '0', '1', '\r')
('0', '0', '0', '1', '\x0b')
('0', '0', '0', '1', '\x0c')
('0', '0', '0', '2', '0')
('0', '0', '0', '2', '1')
('0', '0', '0', '2', '2')
('0', '0', '0', '2', '3')
('0', '0', '0', '2', '4')
('0', '0', '0', '2', '5')
('0', '0', '0', '2', '6')
('0', '0', '0', '2', '7')
('0', '0', '0', '2', '8')
('0', '0', '0', '2', '9')
('0', '0', '0', '2', 'a')
('0', '0', '0', '2', 'b')
('0', '0', '0', '2', 'c')
('0', '0', '0', '2', 'd')
('0', '0', '0', '2', 'e')
('0', '0', '0', '2', 'f')
('0', '0', '0', '2', 'g')
('0', '0', '0', '2', 'h')
('0', '0', '0', '2', 'i')
('0', '0', '0', '2', 'j')
('0', '0', '0', '2', 'k')
('0', '0', '0', '2', 'l')
('0', '0', '0', '2', 'm')
('0', '0', '0', '2', 'n')
('0', '0', '0', '2', 'o')
('0', '0', '0', '2', 'p')
('0', '0', '0', '2', 'q')
('0', '0', '0', '2', 'r')
('0', '0', '0', '2', 's')
('0', '0', '0', '2', 't')
('0', '0', '0', '2', 'u')
('0', '0', '0', '2', 'v')
('0', '0', '0', '2', 'w')
('0', '0', '0', '2', 'x')
('0', '0', '0', '2', 'y')
('0', '0', '0', '2', 'z')
('0', '0', '0', '2', 'A')
('0', '0', '0', '2', 'B')
('0', '0', '0', '2', 'C')
('0', '0', '0', '2', 'D')
('0', '0', '0', '2', 'E')
('0', '0', '0', '2', 'F')
('0', '0', '0', '2', 'G')
('0', '0', '0', '2', 'H')
('0', '0', '0', '2', 'I')
('0', '0', '0', '2', 'J')
('0', '0', '0', '2', 'K')
('0', '0', '0', '2', 'L')
('0', '0', '0', '2', 'M')
('0', '0', '0', '2', 'N')
('0', '0', '0', '2', 'O')
len(itertools.product(string.printable, repeat=5))
Traceback (most recent call last):
  File "<pyshell#17>", line 1, in <module>
    len(itertools.product(string.printable, repeat=5))
TypeError: object of type 'itertools.product' has no len()

3 ** 2
9
len(string.printable) ** 5
10000000000
len(string.printable)
100
import tqd,
SyntaxError: incomplete input
import tqdm
Traceback (most recent call last):
  File "<pyshell#22>", line 1, in <module>
    import tqdm
ModuleNotFoundError: No module named 'tqdm'
import tqdm
Traceback (most recent call last):
  File "<pyshell#23>", line 1, in <module>
    import tqdm
ModuleNotFoundError: No module named 'tqdm'
import tqdm
from tqdm import tqdm
for i in tqdm(range(100), total=100):
    print(i)

    

  0%|          | 0/100 [00:00<?, ?it/s]0
1
2
3
4
5
6
7
8

  9%|▉         | 9/100 [00:00<00:01, 88.15it/s]9
10
11
12
13
14
15
16
17

 18%|█▊        | 18/100 [00:00<00:01, 60.42it/s]18
19
20
21
22
23
24
25
26

 27%|██▋       | 27/100 [00:00<00:01, 70.74it/s]27
28
29
30
31
32
33
34
35
36
37
38
39
40

 41%|████      | 41/100 [00:00<00:00, 93.28it/s]41
42
43
44
45
46
47
48
49
50
51
52
53
54

 55%|█████▌    | 55/100 [00:00<00:00, 107.06it/s]55
56
57
58
59
60
61
62
63
64
65
66
67
68

 69%|██████▉   | 69/100 [00:00<00:00, 115.25it/s]69
70
71
72
73
74
75
76
77
78
79
80
81
82
83

 84%|████████▍ | 84/100 [00:00<00:00, 125.51it/s]84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99

100%|██████████| 100/100 [00:00<00:00, 133.96it/s]
100%|██████████| 100/100 [00:00<00:00, 110.02it/s]


res = ('0', '0', '0', '2', 'O')

''.join(res)
'0002O'
str_res = ''.join(res)
hashlib.md5(str_res).hexdigest()
Traceback (most recent call last):
  File "<pyshell#32>", line 1, in <module>
    hashlib.md5(str_res).hexdigest()
TypeError: Strings must be encoded before hashing
hashlib.md5(str_res.encode()).hexdigest()
'5b6e70639d01ca44e069d084dc9d6a40'
CHARS = string.ascii_letters + string.digits + string.punctuation
CHARS
'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!"#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~'
CHARS = ('', ) + tuple(CHARS)
CHARS
('', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '!', '"', '#', '$', '%', '&', "'", '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', '\\', ']', '^', '_', '`', '{', '|', '}', '~')
for i, pas in enumerate(itertools.product(CHARS, repeat=5)):
    print(pas)
    if i == 10:
        break

    
('', '', '', '', '')
>>> ('', '', '', '', 'a')
... ('', '', '', '', 'b')
... ('', '', '', '', 'c')
... ('', '', '', '', 'd')
... ('', '', '', '', 'e')
... ('', '', '', '', 'f')
('', '', '', '', 'g')
('', '', '', '', 'h')
('', '', '', '', 'i')
('', '', '', '', 'j')
for i, pas in enumerate(itertools.product(CHARS, repeat=5)):
    print(''.join(pas))
    if i == 10:
        break

    

>>> a
>>> b
c
>>> d
>>> e
f
>>> g
h
>>> i
j
